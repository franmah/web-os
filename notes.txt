
/////////////////// PATH TO MVP ///////////////

1. File system
- For now keep file in objects (not saved to indexedDB)
- can save to file
- can open file using extension
- can create/read folder

2. Apps
- can create youtube, txt and folder
- can open youtube and txt files
- can save txt files.

3. Taskbar
- show open app
- pin Apps
- slide icons

4. Windows menu
- show apps 


////// IN PROGRESS:


- create files with extension


/////// TODO: in other


- explore idea of window manager having a windowFocused state.
    - Since only one window can be focused at a time

- Finish looking at react documentation.

- Look at next's documentation

- Change to styled components so that variables are not defined multiple times
  - Fix the z-index madness (if possible)
  - (update to fit styled components) window border radius size should be a global style and applied to header, hello and window
  - use consts as much as possible
      - color for window header text and buttons should be the setMaximizeMenuListeners
      
- Try to replace calls to getElementById to useRefs 
- add tests. Especially for services

- move to webstorm

- Bug: desktop image doesn't load right away. Maybe the background image should be it's own process?
  - also need a loading screen while starting processes load.
  The loading animation leaves the screen once everything is loaded.

- Use convention name for event listeners and event listener handlers passed as prop https://react.dev/learn/responding-to-events:
  - Rename event function by handle... 
  - when passed as props it should be named onSomething...
  - rename event to 'e', example: onClick={e => doSomething(e)}. Don't rename it in the function, example: const doSomething(event) => ...
  - Add e.preventDefault(). This will avoid side effect such as triggering a new render when clicking a page. (make sure to test after doing so)

- look into using classes for services and having indepency injection

- Add option to have no window header (still should have minimize... icons)
  - Decide if there is a header of if the header accept children? Maybe accepting children would be easier. but how do they communicate with the process?
  - If no header then just reuse Component for icons
  - Nothing should go behind or over the icons

Requirement for Notepad:
    - should open files with text
    - should save text
    - can be opened by textEditor but show loss of format error message popup

    - header
      - icon
      - multiple pages
      - add page buttons
      - pages have remove buttons
      - (text in) pages are independent
      
    - second header
      - File, edit, view buttons
      - settings page and icon

    - Settings page
      - information on the right
      - App theme
      - Font
      - Opening files button disabled (with comment // TODO later)

    - footer
      - Make it a window component? (like header) controlled by process?
      - show ln, col, and other things if possible


///////////////      MVP      ///////////////

- README.md udpated

- Desktop & Explorer:
  - create new text file in right click menu context.

- Apps:
  - Explorer app (with files)
  - Youtube player (accept a link and then play a video)
  - Text editor
  - Video player (plays .mp4, .mkv.... videos)
  - Maybe Diablo I?

- Files:
  - exe files.
  - shortcut (create and use)
  - extension (.txt, .doc, .youtube...)

- FileSystem
  - Files other than folder on desktop
  - extension system (in the name and in the file object)
  - add files (save to localStorage in base 64)
  - read files (convert from base 64 and make sure it's readable.)
  - Save Files from computer by dropping them onto desktop
    - https://stackoverflow.com/questions/19119040/how-do-i-save-and-restore-a-file-object-in-local-storage
    - Store a whole object, not just content. This way if people save things it can be retrieved. The object should have a name, type, content, path
    - Set limit to how long to store objects in local storage.

- Taskbar
  - pin app
  - see opened app
  - click app to start it
  - click opened app to show it
  - minimize and maximize work with windows.

- Taskbar Windows icon
  works

