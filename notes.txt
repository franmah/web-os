- Window should not know about the process it contains (remove processId in window params)
- Remove unused processloader (not actual process loader but one of those components)
  - and remove getEveryWindowPositions in WindowManagerSerrvice
- BUG: because the window will use mouseY as top when moving, the window will shift when start moving.
    - Don't use mouse as top but rather find the offset.
- BUG: when unselected, header text should change color.


- BUG: Fix error message in processRendererComponent for windowsParams
- Fix any contradiction and redundancy in WindowState 
    For example, merge moving and resizing since it's one or the other but never both at the same time?
- Check if useEffect in WindowManager should be removed: https://react.dev/learn/escape-hatches#you-might-not-need-an-effect
    - because the manager uses a state, it will render over and over again. You might not want to put the code outside of the useEffect
- Should I use useReducer to manage the window's state?

- Window need to be optimized with memo

// Final steps
- test everything
- run npm outdate
- test again

// TODO in another branch

- Look into moving <style> with animations to metadata (https://developer.mozilla.org/en-US/docs/Web/HTML/Element#document_metadata) and loading all animation in the same tag. If it's goog practice
  
- Look at next's documentation (like react)

- Use semantic html tags instead of div wherever possible + USE FRAGMENT wherever possible to reduce nujmber of container divs
  - https://developer.mozilla.org/en-US/docs/Web/HTML/Element
  - https://developer.mozilla.org/en-US/docs/Web/HTML/Element
  - Lists should use <ul><li><ul/>

  
- Change to styled components so that variables are not defined multiple times
  - Fix the z-index madness
  - (update to fit styled components) window border radius size should be a global style and applied to header, hello and window

- Finish performance improved new Desktop item component (memo). AS WELL AS OTHER IMPROVEMENTS AND OTHER COMPONENTS (useMemo, memo and useCallback)
  - window header should be memo()
  - try useCallback without memo's second argument (areItemsSame)

- Minimize should be done later (needs shortcut bar to work)
  could be done either hiding window or tell processLoader not to render because it's minimized (add minimize function to useProcessContextState)

- Fix the whole Process parameters mess. The Directory could have a process component and default parameters. A Loaded Process could have a more defined model (with an id...)

- Folders on desktop should be like windows (meaning have their own move state)

- Use convention name for event listeners and event listener handlers passed as prop https://react.dev/learn/responding-to-events:
  - Rename event function by handle... 
  - when passed as props it should be named onSomething...
  - rename event to 'e', example: onClick={e => doSomething(e)}. Don't rename it in the function, example: const doSomething(event) => ...
  - Add e.preventDefault(). This will avoid side effect such as triggering a new render when clicking a page. (make sure to test after doing so)