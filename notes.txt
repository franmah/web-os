Text editor

- WindowedProcess should know
  - the exact dimensions they're contained in
  - Their process id.
  - a way to let the window know if process should close (in case of unsaved work for example)
    - Requirement: if process tells window not to close a message should popup. User should still be able to exit app.
    - Create an interface/class that component can inherit and that has a close function?
Bug: when resizing window other things get selected (like text)
Bug: scroll cursor should be !important when resizing
Bug: Editor doesn't scroll down when pressing enter
Bug: Window header text is too close to left border when there is no icon
Notepad

- Add option to have no window header (still should have minimize... icons)
  - Decide if there is a header of if the header accept children? Maybe accepting children would be easier. but how do they communicate with the process?
  - If no header then just reuse Component for icons
  - Nothing should go behind or over the icons

Requirements for TextEditor:
 - Accept file
 - save formatted
  - different color theme?
  - smaller buttons
  - have options similar to microsoft doc


Requirement for Notepad:

- should open files with text
- should save text
- can be opened by textEditor but show loss of format error message popup

- header
  - icon
  - multiple pages
  - add page buttons
  - pages have remove buttons
  - (text in) pages are independent
  
- second header
  - File, edit, view buttons
  - settings page and icon

- Settings page
  - information on the right
  - App theme
  - Font
  - Opening files button disabled (with comment // TODO later)

- footer
  - Make it a window component? (like header) controlled by process?
  - show ln, col, and other things if possible



// TODO: in other

- explore idea of window manager having a windowFocused state.
    - Since only one window can be focused at a time

- Finish looking at react documentation.

- Look at next's documentation

- Change to styled components so that variables are not defined multiple times
  - Fix the z-index madness (if possible)
  - (update to fit styled components) window border radius size should be a global style and applied to header, hello and window
  - use consts as much as possible
      - color for window header text and buttons should be the setMaximizeMenuListeners
      
- Try to replace calls to getElementById to useRefs 
- add tests. Especially for services

- move to webstorm

- Bug: desktop image doesn't load right away. Maybe the background image should be it's own process?
  - also need a loading screen while starting processes load.
  The loading animation leaves the screen once everything is loaded.

- Minimize should be done later (needs shortcut bar to work)
  could be done either hiding window or tell processLoader not to render because it's minimized (add minimize function to useProcessContextState)


- Folders on desktop should be like windows (meaning have their own move state)

- Use convention name for event listeners and event listener handlers passed as prop https://react.dev/learn/responding-to-events:
  - Rename event function by handle... 
  - when passed as props it should be named onSomething...
  - rename event to 'e', example: onClick={e => doSomething(e)}. Don't rename it in the function, example: const doSomething(event) => ...
  - Add e.preventDefault(). This will avoid side effect such as triggering a new render when clicking a page. (make sure to test after doing so)

- look into using classes for services and having indepency injection

///////////////      MVP      ///////////////

- README.md udpated

- Apps:
  - Explorer app (with files)
  - Youtube player (accept a link and then play a video)
  - Text editor
  - Video player (plays .mp4, .mkv.... videos)
  - Maybe Diablo I?

- Files
  - copy/cut/pasted

- Taskbar
  - pin app
  - see opened app
  - click app to start it
  - click opened app to show it
  - minimize and maximize work with windows.

- Taskbar Windows icon
  works